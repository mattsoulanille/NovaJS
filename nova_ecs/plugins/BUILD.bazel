package(default_visibility = ["//visibility:public"])

load("//:defaults.bzl", "ts_library")
load("@npm//@bazel/jasmine:index.bzl", "jasmine_node_test")
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")

ts_library(
    name = "plugins",
    srcs = [
        "time_plugin.ts",
        "multiplayer_plugin.ts",
        "mock_communicator.ts",
        "movement_plugin.ts",
        "serializer_plugin.ts",
        #"modifier_plugin.ts",
        "delta.ts",
        "delta_plugin.ts",
        "keyboard_plugin.ts",
        "copy_change_detector.ts",
    ],
    module_name = "nova_ecs/plugins",
    deps = [
        "//nova_ecs:ecs",
        "//nova_ecs/datatypes",
        "@npm//fast-deep-equal",
        "@npm//fp-ts",
        "@npm//immer",
        "@npm//io-ts",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "plugins_test_lib",
    srcs = [
        "time_plugin_test.ts",
        "multiplayer_plugin_test.ts",
        "movement_plugin_test.ts",
        "serializer_plugin_test.ts",
        #"modifier_plugin_test.ts",
        "delta_plugin_test.ts",
        "copy_change_detector_test.ts",
    ],
    deps = [
        ":plugins",
        "//nova_ecs:ecs",
        "//nova_ecs/datatypes",
        "@npm//@types/jasmine",
        "@npm//@types/uuid",
        "@npm//fp-ts",
        "@npm//immer",
        "@npm//io-ts",
        "@npm//io-ts-types",
        "@npm//rxjs",
        "@npm//uuid",
    ],
)

jasmine_node_test(
    name = "plugins_test",
    srcs = [
        ":plugins_test_lib",
    ],
)

filegroup(
    name = "plugins_es6",
    srcs = [":plugins"],
    output_group = "es6_sources",
)

pkg_npm(
    name = "plugins_pkg",
    deps = [
        ":plugins",
        ":plugins_es6",
    ],
)
