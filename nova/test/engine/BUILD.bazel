package(default_visibility = ["//visibility:public"])

load("@npm//@bazel/jasmine:index.bzl", "jasmine_node_test")
load("//:defaults.bzl", "ts_library")

ts_library(
    name = "position_test_lib",
    srcs = [
        "Position_test.ts"
    ],
    deps = [
        "//nova/src/engine:utils",
        "@npm//immer",
        "@npm//jasmine",
        "@npm//@types/jasmine",
    ]
)

jasmine_node_test(
    name = "position_test",
    link_workspace_root = True,
    srcs = [
        ":position_test_lib",
    ],
)

# jasmine_node_test(
#     name = "unit_tests",
#     srcs = [":unit_test_sources"],
# )

# ts_library(
#     name = "unit_test_sources",
#     testonly = True,
#     # All tests must end in "_test.ts" or jasmine won't recognize them!
#     srcs = [
#         "SpaceObject_test.ts",
#         "Ship_test.ts",
#         "StatefulMap_test.ts",
#         "System_test.ts",
#     ],
#     deps = [
#         "@npm//@types/node",
#         "@npm//typescript",
#         "@npm//uuid",
#         "@npm//@types/uuid",
#         "@npm//rxjs",
#         "@npm//jasmine",
#         "@npm//@types/jasmine",
#         "@npm//google-protobuf",
#         "@npm//@types/google-protobuf",
#         "//nova/src/proto:engine_state_ts_proto",
#         "//nova/src/proto:vector_state_ts_proto",
#         "//nova/src/proto:space_object_state_ts_proto",
#         "//nova/src/proto:ship_state_ts_proto",
#         "//nova/src/proto:system_state_ts_proto",
#         "//nova/src/proto:planet_state_ts_proto",
#         "//nova/src/proto:map_keys_ts_proto",
#         "//nova/src/engine",
#         "//novadatainterface",
#     ]
# )
