package(default_visibility = ["//visibility:public"])

load("//:defaults.bzl", "ts_library")
load("//:esbuild.bzl", "esbuild")
load("//webtesting:web_test.bzl", "web_test")


ts_library(
    name = "display",
    srcs = [
        "display_plugin.ts",
        "sprite_sheet_sprite.ts",
        "animation_graphic.ts",
        "textures_from_frames.ts",
        "starfield_plugin.ts",
        "pixi_app_resource.ts",
        "status_bar.ts",
        "stage_resource.ts",
        "space_resource.ts",
        "resize_event.ts",
        "convex_hull_display_plugin.ts",
        "target_corners_plugin.ts",
    ],
    deps = [
        "//nova_ecs:ecs",
        "//nova_ecs/datatypes",
        "//nova_ecs/plugins",
        "//novadatainterface",
        "//nova/src/nova_plugin",
        "//nova/src/client/gamedata",
        "//nova/src/util",
        "@npm//pixi.js",
        "@npm//uuid",
        "@npm//@types/uuid",
        "@npm//immer",
        "@npm//sat",
        "@npm//@types/sat",
    ]
)

ts_library(
    name = "display_test_lib",
    testonly = True,
    srcs = [
        "display_plugin_test.ts",
    ],
    deps = [
        ":display",
        "@npm//@types/jasmine",
        "@npm//pixi.js",
        "//nova_ecs:ecs",
        "//novadatainterface",
        "//nova/src/nova_plugin",
    ]
)

esbuild(
    name = "display_test_bundle",
    entry_point = "display_plugin_test.ts",
    args = [
        "--keep-names",
        "--resolve-extensions=.mjs,.js",
    ],
    sources_content = True,
    testonly = True,
    deps = [
        ":display_test_lib",
    ],
)

web_test(
    name = "display_test",
    srcs = [
        ":display_test_bundle",
    ],
    static_files = [
        # Serve sourcemaps
        ":display_test_bundle",
    ],
)
