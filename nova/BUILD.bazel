package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("//:esbuild.bzl", "esbuild")

# WARNING: Using directory labels here. That means bazel can't
# detect changes to files within these directories. It only
# detects when the directories change via addition or deletion
# of files. It's necessary because the files in these directories
# have spaces in their names. See the documentation at
# https://docs.bazel.build/versions/master/build-ref.html#label_directory
filegroup(
    name = "nova_data",
    srcs = [
        "Nova_Data",
        "objects",
    ]
)

ts_library(
    name = "server",
    srcs = ["server.ts"],
    deps = [
        "@npm//@types/node",
        "@npm//express",
        "@npm//@types/express",
        "@npm//uuid",
        "@npm//@types/uuid",
        "@npm//io-ts",
        "@npm//fp-ts",
        "@npm//comlink",
        "//novaparse",
        "//nova/src/common",
        #"//nova/src/engine",
        "//nova/src/communication:communication_server_lib",
        "//nova/src/server",
        "//nova/src/server/parsing",
        "//nova_ecs:ecs",
        "//nova_ecs/plugins",
        "//nova/src/nova_plugin",
        "//nova/src/server/parsing:nova_parse_worker_lib",
        #"//nova/src:gameloop_lib",
        #"@npm//protobufjs",
    ],
    data = [
        "//:tsconfig.json"
    ]
)

esbuild(
    name = "server_bundle",
    args = [
        "--keep-names", # For convenience. Can be removed.
        "--resolve-extensions=.mjs,.js",
    ],
    entry_point = "server.ts",
    platform = "node",
    minify = False,
    sources_content = True,
    define = [
        "process.env.NODE_ENV=\"node\""
    ],
    deps = [
        ":server",
    ],
)

data = [
    ":server_bundle",
    "//nova/settings",
    ":nova_data",
    "//nova/src:static_files",
    "//nova/src:browser_bundle",
    "//nova/src/server/parsing:nova_parse_worker_bundle",
    #"//nova/src/engine",
    # "//nova/src/proto:protobufjs_bundle",
    # "@npm//protobufjs",
    #"@npm_bazel_labs//protobufjs:bootstrap_scripts",
]

nodejs_binary(
    name = "nova",
    entry_point = "server_bundle.ts",
    data = data,
)

container_image(
    name = "port_image",
    base = "@nodejs_image_base//image",
    ports = ["8000"],
    stamp = True,
)

nodejs_image(
    name = "nova_image",
    entry_point = "server_bundle.ts",
    # npm deps will be put into their own layer
    data = data,
    base = ":port_image",
)

container_push(
    name = "push_nova_image",
    image = ":nova_image",
    format = "Docker",
    registry = "gcr.io",
    repository = "novajs-303605/nova",
    tag = "dev",
)
